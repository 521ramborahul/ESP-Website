var.basedir  = "/esp/esp/"
var.logdir   = "/var/log/lighttpd"
var.statedir = "/var/lib/lighttpd"

# the server modules
server.modules = (
    "mod_access",
    "mod_auth",
    "mod_rewrite",
    "mod_proxy",
    "mod_alias",
    "mod_fastcgi",
    "mod_expire",
    "mod_compress",
    "mod_status",
    "mod_accesslog"
)

include "mime-types.conf"

# server settings
server.username      = "www-data"
server.groupname     = "www-data"

server.document-root = var.basedir
server.pid-file      = "/var/run/lighttpd.pid"

accesslog.filename = "/var/log/lighttpd/access_log"

server.errorlog      = var.logdir  + "/error.log"
# log errors to syslog instead

#server.errorlog-use-syslog = "enable"

accesslog.format = "%h %u %t \"%r\" %s %b \"%{User-Agent}i\" \"%{Referer}i\""
server.tag           = "lighttpd"
server.follow-symlink = "enable"

# Using epoll for event handler
server.event-handler = "linux-sysepoll"

# bind to port (defaults to 80)
server.port          = 82

# add workers
# Since network latency is not an issue, this probably would do 
# more bad than good...
server.max-worker =  6

$HTTP["url"] =~ "favicon.ico" {
   expire.url = (
 	"" => "access 365 days",
   )
}


fastcgi.server = (
   "/esp.fcgi" => (
      "main" => (
        "socket" => "/esp/esp/esp/esp.sock",
        "check-local" => "disable",
      )
   ),
)

url.rewrite-once = (
  "^/favicon.ico" => "/media/images/favicon.ico",
  "^(/wiki.*)$"  => "$1",
  "^(/code.*)$"  => "$1",
  "^(/media.*)$" => "$1",
  "^(/.*)$" => "/esp.fcgi$1",
)

# SSL Configuration
$SERVER["socket"] == "18.7.25.195:443" {
   ssl.engine   = "enable"
   ssl.pemfile  = "/etc/apache2/ssl/esp.mit.edu.pem"
   server.name  = "esp.mit.edu"
}

$SERVER["socket"] == "18.7.25.195:443" {

   $HTTP["url"] =~ "^/admin/phpMyAdmin" {
    
     auth.backend = "htdigest"
     auth.backend.htdigest.userfile = "/esp/dbadmin/.htpasswd"

     auth.require = ( "" => 
                      (
                        "method"  => "digest",
                        "realm"   => "ESP Database Administration",
                        "require" => "valid-user"
                      )
                    )

     alias.url = ( "/admin/phpMyAdmin" => "/esp/dbadmin/phpMyAdmin" )     
     index-file.names = ( "index.php", "index.html" )
 
     fastcgi.server = ( ".php" => ((
                        "bin-path" => "/usr/bin/php5-cgi",
                        "socket" => "/tmp/php.socket",
                        "max-procs" => 1,
                        "bin-environment" => (
                           "PHP_FCGI_CHILDREN" => "1",
                           "PHP_FCGI_MAX_REQUESTS" => "100"
                         ),
                        "bin-copy-environment" => (
                            "PATH", "SHELL", "USER"
                         ),
                       "broken-scriptfilename" => "enable"
                       )))
     proxy.server  = ( )
  }
   $HTTP["url"] =~ "^/admin/phpPgAdmin" {
    alias.url = ( "/admin/phpPgAdmin" => "/esp/dbadmin/phpPgAdmin" )     
    server.document-root = "/esp/dbadmin/phpPgAdmin"
     index-file.names = ( "index.php", "index.html" )
     auth.backend = "htdigest"
     auth.backend.htdigest.userfile = "/esp/dbadmin/.htpasswd"

     auth.require = ( "" => 
                      (
                        "method"  => "digest",
                        "realm"   => "ESP Database Administration",
                        "require" => "valid-user"
                      )
                    )

 
     fastcgi.server = ( ".php" => ((
                        "bin-path" => "/usr/bin/php5-cgi",
                        "socket" => "/tmp/php.socket",
                        "max-procs" => 1,
                        "bin-environment" => (
                           "PHP_FCGI_CHILDREN" => "2",
                           "PHP_FCGI_MAX_REQUESTS" => "100"
                         ),
                        "bin-copy-environment" => (
                            "PATH", "SHELL", "USER"
                         ),
                       "broken-scriptfilename" => "enable"
                       )))
     proxy.server  = ( )

  }



}




# Pretty status output
$HTTP["remoteip"] == "127.0.0.1" {
   status.status-url = "/server-status"
   status.statistics-url = "/server-stats"
}

# compression settings
compress.cache-dir  = "/esp/cache/compressed/"
compress.filetype   = ("text/plain", "text/html")

$HTTP["url"] =~ "^/code" {
      proxy.balance = "hash"
      proxy.debug   = 0  
      proxy.server  = (""=> ( ("host" => "127.0.0.1","port" => 81) ) )
      fastcgi.server = ( )
}

$HTTP["url"] =~ "^/wiki" {
      proxy.balance = "hash"
      proxy.debug   = 0  
      proxy.server  = (""=> ( ("host" => "127.0.0.1","port" => 81) ) )
      fastcgi.server = ( )
}

